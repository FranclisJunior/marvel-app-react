{"version":3,"sources":["components/header/index.js","util/HttpRequest.js","actions/ListHeroes.js","components/herocard/index.js","components/search/index.js","pages/list-heroes/index.js","containers/ListHeroesContainer.js","actions/ViewHero.js","components/hero-form/index.js","pages/view-hero/index.js","containers/ViewHeroContainer.js","App.js","reducers/list-heroes/index.js","reducers/view-hero/index.js","reducers/index.js","reducers/store.js","index.js"],"names":["Header","className","href","src","request","urlApi","param","get","HttpRequest","instance","console","error","axios","create","baseURL","timeout","method","responseType","HttpGet","a","Get","START_DATA_LOADING","DATA_LOADED","dataLoaded","data","page","totalPages","type","payload","listHeroes","options","dispatch","Object","assign","offset","name","sortName","limit","url","then","result","status","Error","total","Math","floor","results","Index","id","thumbnail","key","to","alt","Search","props","_searchHeroes","value","actions","placeholder","onChange","event","target","Component","connect","state","bindActionCreators","HeroActions","ListHeroes","this","Row","Col","xs","loading","color","length","map","item","description","path","extension","ListHeroesActions","startDataLoading","hero","saveHero","localStorage","setItem","JSON","stringify","getHero","heroId","getItem","parse","undefined","HeroForm","handleSubmit","onSubmit","htmlFor","Field","component","Button","variant","reduxForm","form","initialValues","viewHero","ViewHero","submit","setState","showEdit","params","match","md","onClick","Modal","show","onHide","size","aria-labelledby","centered","closeButton","Title","Body","App","Container","exact","ListHeroesContainer","initialState","combineReducers","action","formReducer","configureStore","createStore","rootReducer","applyMiddleware","thunk","store","render","document","getElementById"],"mappings":"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","file":"static/js/main.b14c989a.chunk.js","sourcesContent":["import React from 'react'\nimport './style.css'\n\nconst Header = () => (\n    <nav className=\"navbar navbar-expand-lg navbar-dark navbar-custom fixed-top\">\n        <div className=\"container\">\n            <a className=\"navbar-brand\" href=\"/\">\n                <img src=\"https://upload.wikimedia.org/wikipedia/commons/0/04/MarvelLogo.svg\"/>\n            </a>\n        </div>\n    </nav>\n);\n\nexport default Header;\n","import axios from 'axios'\n\nclass HttpRequest {\n    static instance() {\n        return axios.create({\n            baseURL: 'https://gateway.marvel.com/v1/public/',\n            timeout: 10000,\n            method: 'get',\n            responseType: 'json'\n        });\n    }\n\n    async Get(urlApi, param = {}) {\n        try {\n            urlApi += \"&apikey=71c6c66725f512871978edcf015edc26\";\n            const get = HttpRequest.instance().get(urlApi, param);\n            return await get;\n        } catch (error) {\n            console.error(error)\n        }\n    }\n}\n\nconst request = new HttpRequest();\n\nexport const HttpGet = async (urlApi, param = {}) => {\n    return await request.Get(urlApi, param);\n};\n","import {HttpGet} from '../util/HttpRequest'\n\nexport const START_DATA_LOADING = 'ListState/START_DATA_LOADING';\nexport const DATA_LOADED = 'ListState/DATA_LOADED';\n\nfunction startDataLoading() {\n    return {\n        type: START_DATA_LOADING,\n    };\n}\n\nfunction dataLoaded(data, page, totalPages) {\n    return {\n        type: DATA_LOADED,\n        payload: {data: data, page: page, totalPages: totalPages}\n    };\n}\n\nexport function listHeroes(options) {\n    return (dispatch) => {\n        dispatch(startDataLoading());\n        const {\n            offset,\n            name,\n            sortName,\n            limit,\n        } = Object.assign({\n            offset: 0,\n            name: '',\n            sortName: '',\n            limit: 20,\n        }, options);\n\n        let url = `characters?offset=${offset}&orderBy=${sortName}name&limit=${limit}`;\n        if (name) {\n            url += `&nameStartsWith=${name}`;\n        }\n\n        HttpGet(url)\n            .then(result => {\n                try {\n                    if (result.status === 200) {\n                        if (offset > result.data.data.total) {\n                            throw new Error('Page does not exist.');\n                        } else {\n                            const page = Math.floor(result.data.data.total / limit);\n                            dispatch(dataLoaded(result.data.data.results, page, result.data.data.total % limit > 0 ? page + 1 : page))\n                        }\n                    } else {\n                        throw new Error(`Marvel API bad response. Status code ${result.status}.`);\n                    }\n                } catch (error) {\n                    console.error(error);\n                    dispatch(dataLoaded([], 0, 0))\n                }\n            });\n    };\n}\n","import React from 'react';\nimport './style.css'\nimport {Link} from \"react-router-dom\";\n\n\nconst Index = ({ id, name, thumbnail }) => (\n    <div id={id} className=\"hero col-xs-12 col-md-3\" key={id}>\n        <Link to={`/hero/${id}`}>\n            <div className=\"thumbnail card\">\n                <div className=\"img-event\">\n                    <img className=\"group list-group-image img-fluid\"\n                         src={thumbnail} alt={thumbnail}/>\n                </div>\n                <div className=\"caption card-body\">\n                    <h4 className=\"group card-title inner list-group-item-heading\">\n                        {name}\n                    </h4>\n                </div>\n                <div className=\"card-overflow\">\n                    <h4>View Hero</h4>\n                </div>\n            </div>\n        </Link>\n    </div>\n);\n\nexport default Index;\n","import React, {Component} from 'react'\nimport { connect } from 'react-redux'\nimport {bindActionCreators} from 'redux'\nimport * as HeroActions from '../../actions/ListHeroes'\nimport './style.css'\n\nclass Search extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    _searchHeroes = (value) => {\n        this.props.actions.listHeroes({name: value});\n    }\n\n    render() {\n        return (\n            <div className='content'>\n                <input id='search-input' className='form-control search-input' placeholder='Search heroes by name'\n                onChange={event => this._searchHeroes(event.target.value)}/>\n            </div>\n        )\n    }\n}\n\nexport default connect(\n    state => ({}),\n    dispatch => ({\n        actions: bindActionCreators(HeroActions, dispatch),\n    }),\n)(Search);\n","import React, {Component} from 'react'\nimport HeroCard from '../../components/herocard/index'\nimport {CircleToBlockLoading} from 'react-loadingg'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Search from '../../components/search'\nimport './style.css'\n\nexport default class ListHeroes extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        this.props.actions.listHeroes();\n    }\n\n    render() {\n        return (\n            <Row className='row'>\n                <Col xs={12}>\n                    <Search/>\n                    <div className='content'>\n                        <div className='heroes row view-group'>\n                            {this.props.loading &&\n                                <div className='loading'>\n                                    <CircleToBlockLoading color={'red'} />\n                                </div>\n                            }\n\n                            {!this.props.loading && !this.props.data.length &&\n                                <div className='col-sm-12 col-lg-12'>\n                                    <h1 className='no-result'>No heroes found with this name</h1>\n                                </div>\n                            }\n\n                            {!this.props.loading && this.props.data &&\n                                this.props.data.map(item =>\n                                    <HeroCard\n                                        key={item.id}\n                                        id={item.id}\n                                        name={item.name}\n                                        description={item.description}\n                                        thumbnail={item.thumbnail.path + '.' + item.thumbnail.extension}\n                                    />\n                                )\n                            }\n                        </div>\n                    </div>\n                </Col>\n            </Row>\n        )\n    }\n}\n","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as ListHeroesActions from '../actions/ListHeroes'\nimport ListHeroes from '../pages/list-heroes'\n\nexport default connect(\n    state => ({\n        data: state.listHeroes.data,\n        loading: state.listHeroes.loading\n    }),\n    dispatch => ({\n        actions: bindActionCreators(ListHeroesActions, dispatch),\n    }),\n)(ListHeroes);\n","import {HttpGet} from '../util/HttpRequest'\n\nexport const START_DATA_LOADING = 'ViewState/START_DATA_LOADING';\nexport const DATA_LOADED = 'ViewState/DATA_LOADED';\n\nfunction startDataLoading() {\n    return {\n        type: START_DATA_LOADING,\n    };\n}\n\nfunction dataLoaded(hero) {\n    return {\n        type: DATA_LOADED,\n        payload: {hero: hero}\n    };\n}\n\nexport function saveHero(hero) {\n    localStorage.setItem(hero.id, JSON.stringify(hero));\n    return (dispatch) => {\n        dispatch(dataLoaded(hero))\n    }\n}\n\n\nexport function getHero(heroId) {\n    if (localStorage.getItem(heroId)) {\n        const hero = JSON.parse(localStorage.getItem(heroId))\n        return (dispatch) => {\n            dispatch(startDataLoading());\n            dispatch(dataLoaded(hero))\n        }\n    } else {\n        return (dispatch) => {\n            dispatch(startDataLoading());\n\n            HttpGet(`characters/${heroId}?`)\n                .then(result => {\n                    try {\n                        if (result.status === 200) {\n                            dispatch(dataLoaded(result.data.data.results[0]))\n                        } else {\n                            throw new Error(`Marvel API bad response. Status code ${result.status}.`);\n                        }\n                    } catch (error) {\n                        console.error(error);\n                        dispatch(dataLoaded(undefined))\n                    }\n                });\n        }\n    }\n}\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Field, reduxForm } from 'redux-form'\nimport Button from \"react-bootstrap/Button\";\n\nlet HeroForm = props => {\n    const { handleSubmit } = props\n    return (\n        <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n                <label className=\"control-label\" htmlFor=\"name\">First Name</label>\n                <Field className=\"form-control\" name=\"name\" component=\"input\" type=\"text\" />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"control-label\" htmlFor=\"description\">Description</label>\n                <Field className=\"form-control\" name=\"description\" component=\"textarea\" type=\"text\" />\n            </div>\n            <Button variant=\"primary\" type=\"submit\" className=\"float-right\">\n                Save\n            </Button>\n        </form>\n    )\n}\n\nHeroForm = reduxForm({\n    form: 'hero'\n})(HeroForm)\n\nHeroForm = connect(\n    state => ({\n        initialValues: state.viewHero.hero\n    })\n)(HeroForm)\n\nexport default HeroForm;\n","import React, {Component} from \"react\";\nimport {CircleToBlockLoading} from \"react-loadingg\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport {Link} from \"react-router-dom\";\nimport * as Icon from 'react-feather';\nimport Modal from \"react-bootstrap/Modal\"\nimport HeroForm from \"../../components/hero-form\"\nimport './style.css'\n\nexport default class ViewHero extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            showEdit: false,\n        };\n    }\n\n    componentDidMount() {\n        const { match: { params } } = this.props;\n        this.props.actions.getHero(params.heroId)\n    }\n\n    submit = (hero) => {\n        this.props.actions.saveHero(hero);\n        this.setState({showEdit: false});\n    }\n\n    render() {\n        const handleClose = () => this.setState({showEdit: false});\n        const handleShow = () => this.setState({showEdit: true});\n\n        return (\n            <div className=\"loading\">\n                {this.props.loading &&\n                    <CircleToBlockLoading color={'red'}/>\n                }\n\n                {!this.props.loading && !this.props.hero &&\n                    <div className='col-sm-12 col-lg-12'>\n                        <h1 className='no-result'>Hero not found</h1>\n                    </div>\n                }\n\n                {!this.props.loading && this.props.hero &&\n                    <Row className='row view-hero'>\n                        <Col md={4}>\n                            <div className=\"img-event\">\n                                <img className=\"img-fluid\"\n                                     src={this.props.hero.thumbnail.path + '.' + this.props.hero.thumbnail.extension}/>\n                                <Link to={'/'} className=\"d-block\" >  Back to list</Link>\n                            </div>\n                        </Col>\n                        <Col md={7}>\n                            <h1>{this.props.hero.name}</h1>\n                            {this.props.hero.description ?\n                                (<p>{this.props.hero.description}</p>)\n                                :\n                                (<p>No description</p>)\n                            }\n                        </Col>\n\n                        <Col md={1}>\n                            <Icon.Edit2 color=\"white\" onClick={handleShow}/>\n                        </Col>\n                        <Modal show={this.state.showEdit}\n                               onHide={handleClose}\n                               size=\"md\"\n                               aria-labelledby=\"contained-modal-title-vcenter\"\n                               centered>\n                            <Modal.Header closeButton>\n                                <Modal.Title>Edit Hero</Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>\n                                <HeroForm onSubmit={this.submit}/>\n                            </Modal.Body>\n                        </Modal>\n                    </Row>\n                }\n            </div>\n        )\n    }\n\n}\n","import { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport * as HeroActions from '../actions/ViewHero'\nimport ViewHero from '../pages/view-hero'\n\nexport default connect(\n    state => ({\n        hero: state.viewHero.hero,\n        loading: state.listHeroes.loading\n    }),\n    dispatch => ({\n        actions: bindActionCreators(HeroActions, dispatch),\n    }),\n)(ViewHero);\n","import React, {Component} from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\nimport Container from 'react-bootstrap/Container';\nimport Header from \"./components/header\";\nimport ListHeroesContainer from \"./containers/ListHeroesContainer\";\nimport ViewHero from \"./containers/ViewHeroContainer\";\n\nclass App extends Component {\n    render() {\n        return (\n            <div>\n                <Header/>\n                <Container className=\"main\">\n                    <Router>\n                        <Route path=\"/\" exact={true} component={ListHeroesContainer}/>\n                        <Route path=\"/hero/:heroId\" component={ViewHero}/>\n                    </Router>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import {DATA_LOADED, START_DATA_LOADING} from \"../../actions/ListHeroes\";\n\nconst initialState = {\n    loading: false,\n    page: 1,\n    totalPages: 0,\n    data: [],\n};\n\n\nexport default function listHeroes(state = initialState, action = {}) {\n    switch (action.type) {\n        case START_DATA_LOADING:\n            return Object.assign({}, state, {\n                loading: true,\n            });\n        case DATA_LOADED:\n            return Object.assign({}, state, {\n                loading: false,\n                data: action.payload.data,\n                page: action.payload.page,\n                totalPages: action.payload.totalPages\n            });\n        default:\n            return state;\n    }\n}\n","import {DATA_LOADED, START_DATA_LOADING} from \"../../actions/ViewHero\";\n\nconst initialState = {\n    loading: false,\n    hero: undefined\n};\n\n\nexport default function viewHero(state = initialState, action = {}) {\n    switch (action.type) {\n        case START_DATA_LOADING:\n            return Object.assign({}, state, {\n                loading: true,\n            });\n        case DATA_LOADED:\n            return Object.assign({}, state, {\n                loading: false,\n                hero: action.payload.hero\n            });\n        default:\n            return state;\n    }\n}\n","// @flow\nimport { combineReducers } from 'redux'\nimport { reducer as formReducer } from 'redux-form'\nimport listHeroes from './list-heroes';\nimport viewHero from \"./view-hero\";\n\nexport default combineReducers({\n    listHeroes: listHeroes,\n    viewHero: viewHero,\n    form: formReducer\n});\n","import {applyMiddleware, createStore} from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './index';\n\nconst configureStore = () => {\n    return createStore(\n        rootReducer,\n        applyMiddleware(thunk)\n    );\n};\n\nexport default configureStore;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport configureStore from \"./reducers/store\";\nimport './index.css'\n\nconst store = configureStore();\n\nrender(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}